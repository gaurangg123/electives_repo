print("dsfs")
a <- "hi"
print(a)
read.csv(‪C:\Users\harsh\Desktop\iris.csv)
path <- "‪C:\Users\harsh\Desktop\iris.csv"
path <- "‪C:\Users\harsh\Desktop\iris.csv"
path <- "C:\\Users\\harsh\\Desktop\\iris.csv"
path
path1 <- read_csv("C:\\Users\\harsh\\Desktop\\iris.csv")
install.packages("readr")
smartphones <- read.csv(C:\Users\harsh\Desktop\dataset.csv)
smartphones <- read.csv("C:\Users\harsh\Desktop\dataset.csv")
smartphones <- read.csv("dataset.csv")
smartphones <- read.csv("C:\Users\harsh\Desktop\dataset.csv")
source("~/.active-rstudio-document")
smartphones <- read.csv("dataset.csv", TRUE, ",")
smartphones <- read.csv("C:\Users\harsh\Desktop\dataset.csv", TRUE, ",")
smartphones <- read.csv("dataset.csv", TRUE, ",")
getwd()
a <- read.csv("dataset")
setwd("C:/Users/harsh/Documents")
a <- read.csv("dataset.csv")
View(a)
max_battery <- max(smartphones$battery)
max_battery <- max(smartphones$battery)
smartphones <- read.csv("dataset.csv")
View(smartphones)
max_battery <- max(smartphones$battery)
smartphone_max_battery <- smartphones[smartphones$battery == max_battery, c("brand", "battery")]
print(paste("The smartphone with the highest battery capacity is",
smartphone_max_battery$brand, "with a capacity of", smartphone_max_battery$battery))
avg_screen_size <- mean(smartphones$inches)
print(paste("The average screen size of smartphones in this dataset is", round(avg_screen_size, 2), "inches"))
highest_resolution <- max(smartphones$resolution[smartphones$os == "Android 7.0"])
smartphone_highest_resolution <- smartphones[smartphones$resolution == highest_resolution & smartphones$os == "Android 7.0", "brand"]
print(paste("The smartphone with the highest resolution among Android 7.0 OS devices is", smartphone_highest_resolution))
max_ram <- max(smartphones$ram)
smartphone_max_ram <- smartphones[smartphones$ram == max_ram, c("brand", "ram")]
max_ram <- max(smartphones$ram)
smartphone_max_ram <- smartphones[smartphones$ram == max_ram, c("brand", "ram")]
max_ram <- max(smartphones$ram)
smartphone_max_ram <- smartphones[smartphones$ram == max_ram, c("brand", "ram")]
max_ram <- max(smartphones$ram)
smartphones_with_max_ram <- smartphones[smartphones$ram == max_ram, ]
print(paste("The smartphone(s) with the most RAM is/are:"))
print(smartphones_with_max_ram[, c("brand", "ram")])
max_ram <- max(smartphones$ram)
smartphones_with_max_ram <- smartphones[smartphones$ram == max_ram(GB), ]
max_ram <- max(smartphones$ram)
smartphones_with_max_ram <- smartphones[smartphones$ram == max_ram, ]
print(paste("The smartphone(s) with the most RAM is/are:"))
print(smartphones_with_max_ram[, c("brand", "ram")])
# 4. Find the smartphone(s) with the most RAM
max_ram <- max(smartphones$ram)
smartphones_with_max_ram <- smartphones[smartphones$ram == max_ram, c("brand", "ram")]
#  Calculate the average weight of smartphones announced in 2017
smartphones_announced_2017 <- smartphones[format(as.Date(smartphones$announcement_date, "%d-%m-%y"), "%Y") == "2017", ]
average_weight_2017 <- mean(smartphones_announced_2017$weight)
print(paste("The average weight of smartphones announced in 2017 is approximately", round(average_weight_2017, 2), "grams."))
filtered_smartphones <- smartphones[smartphones$resolution == "1080x1920" & smartphones$os == "Android 7.0", "price(USD)"]
price_range <- c(min(filtered_smartphones), max(filtered_smartphones))
print(paste("The price range for smartphones with 1080x1920 resolution and Android 7.0 OS is between",
price_range[1], "USD and", price_range[2], "USD"))
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
ggplot(smartphones, aes(x = battery)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
labs(title = "Battery Capacity Distribution",
x = "Battery Capacity (mAh)",
y = "Frequency") +
theme_minimal()
ggplot(smartphones, aes(x = battery)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
labs(title = "Battery Capacity Distribution",
x = "Battery Capacity (mAh)",
y = "Frequency") +
theme_minimal()
library(ggplot2)
install.packages("dplyr")
library(ggplot2)
library(dplyr)
ggplot(smartphones, aes(x = battery)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
labs(title = "Battery Capacity Distribution",
x = "Battery Capacity (mAh)",
y = "Frequency") +
theme_minimal()
ggplot(smartphones, aes(x = battery, y = `price(USD)`)) +
geom_point(color = "red") +
labs(title = "Battery Capacity vs. Price",
x = "Battery Capacity (mAh)",
y = "Price (USD)") +
theme_minimal()
announcement_counts <- smartphones %>%
group_by(announcement_month) %>%
summarize(count = n())
smartphones <- read.csv("C:\Users\harsh\Documents\dataset.csv")
smartphone <- read.csv("C:/Users/harsh/Documents/dataset.csv")
View(smartphone)
max_battery <- max(smartphones$battery)
smartphones <- read.csv("C:/Users/harsh/Documents/dataset.csv")
max_battery <- max(smartphones$battery)
smartphone_max_battery <- smartphones[smartphones$battery == max_battery, c("brand", "battery")]
print(paste("The smartphone with the highest battery capacity is",
smartphone_max_battery$brand, "with a capacity of", smartphone_max_battery$battery))
avg_screen_size <- mean(smartphones$inches)
print(paste("The average screen size of smartphones in this dataset is", round(avg_screen_size, 2), "inches"))
highest_resolution <- max(smartphones$resolution[smartphones$os == "Android 7.0"])
smartphone_highest_resolution <- smartphones[smartphones$resolution == highest_resolution & smartphones$os == "Android 7.0", "brand"]
print(paste("The smartphone with the highest resolution among Android 7.0 OS devices is", smartphone_highest_resolution))
max_ram <- max(smartphones$ram)
smartphone_max_ram <- smartphones[smartphones$ram == max_ram, c("brand", "ram")]
filtered_smartphones <- smartphones[smartphones$resolution == "1080x1920" & smartphones$os == "Android 7.0", "price(USD)"]
price_range <- c(min(filtered_smartphones), max(filtered_smartphones))
print(paste("The price range for smartphones with 1080x1920 resolution and Android 7.0 OS is between",
price_range[1], "USD and", price_range[2], "USD"))
smartphones_announced_2017 <- smartphones[format(as.Date(smartphones$announcement_date, "%d-%m-%y"), "%Y") == "2017", ]
average_weight_2017 <- mean(smartphones_announced_2017$weight)
print(paste("The average weight of smartphones announced in 2017 is approximately", round(average_weight_2017, 2), "grams."))
filtered_smartphones <- smartphones[smartphones$resolution == "1080x1920" & smartphones$`ram(GB)` == 4, ]
average_battery_capacity <- mean(filtered_smartphones$battery)
print(paste("The average battery capacity of smartphones with 1080p resolution and 4GB of RAM is", round(average_battery_capacity, 2), "mAh."))
android_7_smartphones <- smartphones[smartphones$os == "Android 7.0", ]
median_weight <- median(android_7_smartphones$`weight(g)`)
print(paste("Among smartphones with Android 7.0, the median weight is", median_weight, "grams."))
# Filter for smartphones that support 8K video recording and have a battery capacity > 4000 mAh
filtered_smartphones <- smartphones[smartphones$video_8K == TRUE & smartphones$battery > 4000, ]
# Count the number of smartphones that meet both criteria
count_8K_and_high_battery <- nrow(filtered_smartphones)
print(paste("The number of smartphones in the dataset that support 8K video recording and have a battery capacity greater than 4000 mAh is", count_8K_and_high_battery))
# Find the earliest announcement date in the dataset
earliest_date <- min(smartphones$announcement_date)
# Find the smartphone(s) announced on the earliest date
earliest_announcements <- smartphones[smartphones$announcement_date == earliest_date, c("phone_name", "brand")]
print(paste("The earliest announcement date in the dataset is", earliest_date, "and the smartphone(s) announced on that date is/are:"))
print(earliest_announcements)
# Filter for smartphones with at least 32GB of storage and from the Sony brand
filtered_smartphones <- smartphones[smartphones$`storage(GB)` >= 32 & smartphones$brand == "Sony", ]
# Calculate the average weight for these smartphones
average_weight_sony <- mean(filtered_smartphones$`weight(g)`)
print(paste("Among smartphones with at least 32GB of storage and from the Sony brand, the average weight is", round(average_weight_sony, 2), "grams."))
# Summary statistics for numeric variables
summary(smartphones[, c("inches", "battery", "ram(GB)", "weight(g)", "storage(GB)", "price(USD)")])
# Summary statistics for specific columns (replace with actual column names)
summary(smartphones[, c("inches", "battery", "ram(GB)", "weight(g)", "storage(GB)", "price(USD)")])
# Summary statistics for specific columns (replace with actual column names)
summary(smartphones[, c("inches", "battery", "ram(GB)", "weight(g)", "storage(GB)", "price(USD)")])
summary(smartphones[, c("inches", "battery", "ram(GB)", "weight(g)", "storage(GB)", "price(USD)")])
# Summary statistics for specific columns (replace with actual column names)
summary(smartphones[, c(inches, "battery", "ram(GB)", "weight(g)", "storage(GB)", "price(USD)")])
# Summary statistics for specific columns (replace with actual column names)
summary(smartphones[, c('inches', "battery", "ram(GB)", "weight(g)", "storage(GB)", "price(USD)")])
mean = mean(smartphones$inches)
print(mean)
median = median(smartphones$ram.GB.)
print(median)
mode = mode(smartphones$weight.g.)
print(mode)
mode = mode(smartphones$weight.g.)
print(mode)
summary(smartphones[,c("inches", "battery", "ram(GB)","weight(g)", "storage(GB)", "price(USD)")])
summary(smartphones[,c("$inches", "battery", "ram(GB)","weight(g)", "storage(GB)", "price(USD)")])
